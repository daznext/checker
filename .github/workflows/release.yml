name: Go

on:
  push:
    tags:
      - v*

jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

      - name: Set up Go 1.x
        uses: actions/setup-go@v2
        with:
          go-version: ^1.15
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: |
          go get -v -t -d ./...

      - name: Build
        run: go build -v -i -ldflags "-X my/checker/config.Version=${GITHUB_REF##*/} -X my/checker/config.VersionSHA=${GITHUB_SHA} -X my/checker/config.VersionBuild=${GITHUB_RUN_ID}" -o build/${BINARY_NAME}
        env:
          BINARY_NAME: "checker"

      - name: Compress binary
        run: tar -xzvf ${BINARY_NAME}-${GITHUB_REF##*/}-linux_amd64.tgz build/${BINARY_NAME}
        env:
          BINARY_NAME: "checker"

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2
        with:
          name: checker
          path: ${BINARY_NAME}-${GITHUB_REF##*/}-linux_amd64.tgz
        env:
          BINARY_NAME: "checker"

      - name: Build and push Docker images
        uses: docker/build-push-action@v1.1.0
        with:
          username: ${{ secrets.REGISTRY_LOGIN }}
          password: ${{ secrets.REGISTRY_PASSWORD }}
          repository: ${{ secrets.REGISTRY_LOGIN }}/checker
          tag_with_ref: true
          tag_with_sha: true

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${BINARY_NAME}-${GITHUB_REF}-linux_amd64.tgz
          asset_name: checker
          tag: ${{ github.ref }}
          overwrite: true
          body: "Checker release ${GITHUB_REF}"
        env:
          BINARY_NAME: "checker"